{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { nanoid } from 'nanoid';\nexport default {\n  name: 'Test',\n  data() {\n    return {\n      radio1: \"get\",\n      get_key_value: [{\n        id: nanoid(),\n        key: \"k1\",\n        value: \"v1\"\n      }],\n      inputarea: \"\",\n      tableData: []\n    };\n  },\n  methods: {\n    oprKV(type) {\n      const len = this.get_key_value.length + 1;\n      if (type === 'add') {\n        this.get_key_value.push({\n          id: nanoid(),\n          key: `k${len}`,\n          value: `v${len}`\n        });\n      } else {\n        this.get_key_value.pop(-1);\n      }\n      // console.log( this.$refs[`input${this.get_key_value[0].id}`])\n      // Object.values(this.$refs)[1].focus()\n      this.$nextTick(() => {\n        this.$refs[`input${this.get_key_value[len - 1].id}`][0].focus();\n      });\n    },\n    async send() {\n      if (this.radio1 === 'get') {\n        let getInfo = \"\";\n        this.get_key_value.forEach((value, index, array) => {\n          getInfo += `${value.key}=${value.value}&`;\n        });\n        getInfo = getInfo.slice(0, getInfo.length - 1);\n        console.log(getInfo);\n        await this.$ajax.get(`/test/son?${getInfo}`).then(res => {\n          console.log(res.data);\n          this.inputarea = res.data;\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        let getInfo = {};\n        this.get_key_value.forEach((value, index, array) => {\n          getInfo[value.key] = value.value;\n        });\n        console.log(getInfo);\n        await this.$ajax.post('/test/son/', getInfo).then(res => {\n          console.log(res.data);\n          this.inputarea = res.data;\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n    async sendUser(type) {\n      await this.$ajax.get('test/configuser/').then(res => {\n        console.log(res.data);\n        this.tableData = res.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["nanoid","name","data","radio1","get_key_value","id","key","value","inputarea","tableData","methods","oprKV","type","len","length","push","pop","$nextTick","$refs","focus","send","getInfo","forEach","index","array","slice","console","log","$ajax","get","then","res","catch","err","post","sendUser"],"sources":["src/components/Test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card>\r\n            <el-header style=\"margin-left:-20px;\"><h2>\r\n                这是一个测试前后端交互的接口\r\n            </h2></el-header>\r\n            <el-container>\r\n                <el-aside width=\"500px\">\r\n                    <el-row style=\"margin-bottom: 20px;\">\r\n                        <el-radio-group v-model=\"radio1\" class=\"ml-4\">\r\n                            <el-radio label=\"get\" size=\"large\"></el-radio>\r\n                            <el-radio label=\"post\" size=\"large\"></el-radio>\r\n                        </el-radio-group>\r\n                    </el-row>\r\n                    <el-button icon=\"el-icon-plus\" size=\"large\"\r\n                    @click=\"oprKV('add');\"></el-button>\r\n                    <span v-for=\"item in get_key_value\" :key=\"item.id\" style=\"margin:0px 5px 0px 5px\" >\r\n                        <el-input style=\"width:50px;vertical-align:middle;\" placeholder=\"key\" v-model=\"item.key\" :ref=\"`input${item.id}`\" />\r\n                        <span style=\"font-size:20px;vertical-align:middle;margin:0px 5px 0px 5px\">:</span>\r\n                        <el-input style=\"width:50px;vertical-align:middle;\" placeholder=\"value\" v-model=\"item.value\"/>\r\n                    </span>\r\n                    <el-button icon=\"el-icon-minus\" size=\"large\" @click=\"oprKV('remove')\"></el-button>\r\n                </el-aside>\r\n                <el-main>\r\n                    <el-input type=\"textarea\" style=\"height:70px;\" v-model=\"inputarea\" />\r\n                </el-main>\r\n            </el-container>\r\n\r\n            <el-container>\r\n                <el-footer>\r\n                    <el-button type=\"info\" @click=\"send\">send</el-button>\r\n                </el-footer>\r\n            </el-container>\r\n            <el-container>\r\n                <el-header style=\"margin-left:-20px;\"><h2>\r\n                    这是一个测试数据库的接口\r\n                </h2></el-header>\r\n                <el-container>\r\n                    <el-aside width=\"500px\">\r\n                        <el-button type=\"info\" style=\"margin-top:20px;\"  @click=\"sendUser('get')\">send GET</el-button>\r\n                        <el-button type=\"info\" style=\"margin-top:20px;\"  @click=\"sendUser('post')\">send POST</el-button>\r\n                        <el-row>\r\n                            <el-col>id:</el-col>\r\n                            <el-col><el-input style=\"width:200px;\" /></el-col>\r\n                        </el-row>\r\n                    </el-aside>\r\n    \r\n                    <el-main>\r\n                        <el-table :data=\"tableData\">\r\n                            <el-table-column prop=\"id\" label=\"id\"></el-table-column>\r\n                            <el-table-column prop=\"password\" label=\"password\"></el-table-column>\r\n                            <el-table-column prop=\"user_name\" label=\"user_name\"></el-table-column>\r\n                        </el-table>\r\n                    </el-main>\r\n\r\n                </el-container>\r\n            </el-container>\r\n\r\n\r\n        </el-card>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {nanoid} from 'nanoid'\r\nexport default {\r\n    name:'Test',\r\n    data(){\r\n        return {\r\n            radio1:\"get\",\r\n            get_key_value:[{id:nanoid(),key:\"k1\",value:\"v1\"}],\r\n            inputarea:\"\",\r\n            tableData:[],\r\n        }\r\n    },\r\n    methods:{\r\n        oprKV(type){\r\n            const len=this.get_key_value.length+1;\r\n            if(type==='add'){\r\n                this.get_key_value.push({id:nanoid(),key:`k${len}`,value:`v${len}`})\r\n            }else{\r\n                this.get_key_value.pop(-1);\r\n            }\r\n            // console.log( this.$refs[`input${this.get_key_value[0].id}`])\r\n            // Object.values(this.$refs)[1].focus()\r\n            this.$nextTick(()=>{\r\n                this.$refs[`input${this.get_key_value[len-1].id}`][0].focus()\r\n            })\r\n        },\r\n        async send(){\r\n            if(this.radio1==='get'){\r\n                let getInfo=\"\"\r\n                this.get_key_value.forEach((value,index,array)=>{\r\n                    getInfo+=`${value.key}=${value.value}&`\r\n                })\r\n                getInfo=getInfo.slice(0,getInfo.length-1)\r\n                console.log(getInfo)\r\n                await this.$ajax\r\n                .get(`/test/son?${getInfo}`)\r\n                .then(res=>{console.log(res.data);this.inputarea=res.data})\r\n                .catch(err=>{console.log(err)});\r\n            }else{\r\n                let getInfo={}\r\n                this.get_key_value.forEach((value,index,array)=>{\r\n                    getInfo[value.key]=value.value;\r\n                })\r\n                console.log(getInfo);\r\n                await this.$ajax\r\n                .post('/test/son/',getInfo)\r\n                .then(res=>{console.log(res.data);this.inputarea=res.data})\r\n                .catch(err=>{console.log(err)});\r\n            }\r\n\r\n        },\r\n        async sendUser(type){\r\n            await this.$ajax\r\n            .get('test/configuser/')\r\n            .then(res=>{\r\n                console.log(res.data);\r\n                this.tableData=res.data;\r\n            })\r\n            .catch(err=>{console.log(err)})\r\n\r\n        },\r\n\r\n    }\r\n    \r\n}\r\n</script>\r\n<style lang=\"css\">\r\n    \r\n</style>"],"mappings":";AA+DA,SAAAA,MAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,aAAA;QAAAC,EAAA,EAAAL,MAAA;QAAAM,GAAA;QAAAC,KAAA;MAAA;MACAC,SAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,MAAAC,IAAA;MACA,MAAAC,GAAA,QAAAT,aAAA,CAAAU,MAAA;MACA,IAAAF,IAAA;QACA,KAAAR,aAAA,CAAAW,IAAA;UAAAV,EAAA,EAAAL,MAAA;UAAAM,GAAA,MAAAO,GAAA;UAAAN,KAAA,MAAAM,GAAA;QAAA;MACA;QACA,KAAAT,aAAA,CAAAY,GAAA;MACA;MACA;MACA;MACA,KAAAC,SAAA;QACA,KAAAC,KAAA,cAAAd,aAAA,CAAAS,GAAA,MAAAR,EAAA,OAAAc,KAAA;MACA;IACA;IACA,MAAAC,KAAA;MACA,SAAAjB,MAAA;QACA,IAAAkB,OAAA;QACA,KAAAjB,aAAA,CAAAkB,OAAA,EAAAf,KAAA,EAAAgB,KAAA,EAAAC,KAAA;UACAH,OAAA,OAAAd,KAAA,CAAAD,GAAA,IAAAC,KAAA,CAAAA,KAAA;QACA;QACAc,OAAA,GAAAA,OAAA,CAAAI,KAAA,IAAAJ,OAAA,CAAAP,MAAA;QACAY,OAAA,CAAAC,GAAA,CAAAN,OAAA;QACA,WAAAO,KAAA,CACAC,GAAA,cAAAR,OAAA,IACAS,IAAA,CAAAC,GAAA;UAAAL,OAAA,CAAAC,GAAA,CAAAI,GAAA,CAAA7B,IAAA;UAAA,KAAAM,SAAA,GAAAuB,GAAA,CAAA7B,IAAA;QAAA,GACA8B,KAAA,CAAAC,GAAA;UAAAP,OAAA,CAAAC,GAAA,CAAAM,GAAA;QAAA;MACA;QACA,IAAAZ,OAAA;QACA,KAAAjB,aAAA,CAAAkB,OAAA,EAAAf,KAAA,EAAAgB,KAAA,EAAAC,KAAA;UACAH,OAAA,CAAAd,KAAA,CAAAD,GAAA,IAAAC,KAAA,CAAAA,KAAA;QACA;QACAmB,OAAA,CAAAC,GAAA,CAAAN,OAAA;QACA,WAAAO,KAAA,CACAM,IAAA,eAAAb,OAAA,EACAS,IAAA,CAAAC,GAAA;UAAAL,OAAA,CAAAC,GAAA,CAAAI,GAAA,CAAA7B,IAAA;UAAA,KAAAM,SAAA,GAAAuB,GAAA,CAAA7B,IAAA;QAAA,GACA8B,KAAA,CAAAC,GAAA;UAAAP,OAAA,CAAAC,GAAA,CAAAM,GAAA;QAAA;MACA;IAEA;IACA,MAAAE,SAAAvB,IAAA;MACA,WAAAgB,KAAA,CACAC,GAAA,qBACAC,IAAA,CAAAC,GAAA;QACAL,OAAA,CAAAC,GAAA,CAAAI,GAAA,CAAA7B,IAAA;QACA,KAAAO,SAAA,GAAAsB,GAAA,CAAA7B,IAAA;MACA,GACA8B,KAAA,CAAAC,GAAA;QAAAP,OAAA,CAAAC,GAAA,CAAAM,GAAA;MAAA;IAEA;EAEA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}