{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { nanoid } from 'nanoid';\nexport default {\n  name: 'Test',\n  data() {\n    return {\n      radio1: \"get\",\n      get_key_value: [{\n        id: nanoid(),\n        key: \"k1\",\n        value: \"v1\"\n      }]\n    };\n  },\n  methods: {\n    oprKV(type) {\n      const len = this.get_key_value.length + 1;\n      if (type === 'add') {\n        this.get_key_value.push({\n          id: nanoid(),\n          key: `k${len}`,\n          value: `v${len}`\n        });\n      } else {\n        this.get_key_value.pop(-1);\n      }\n      // console.log( this.$refs[`input${this.get_key_value[0].id}`])\n      // Object.values(this.$refs)[1].focus()\n      this.$nextTick(() => {\n        this.$refs[`input${this.get_key_value[len - 1].id}`][0].focus();\n      });\n    },\n    async send() {\n      let getInfo = \"\";\n      this.get_key_value.forEach((value, index, array) => {\n        getInfo += `${value.key}=${value.value}&`;\n      });\n      getInfo = getInfo.slice(0, getInfo.length - 1);\n      console.log(getInfo);\n      await this.$ajax.get(`/test/son?${getInfo}`).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["nanoid","name","data","radio1","get_key_value","id","key","value","methods","oprKV","type","len","length","push","pop","$nextTick","$refs","focus","send","getInfo","forEach","index","array","slice","console","log","$ajax","get","then","res","catch","err"],"sources":["src/components/Test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card>\r\n            <el-header>这是一个测试前后端交互的接口</el-header>\r\n            <el-col :span=\"22\">\r\n                <el-row>\r\n                    <el-radio-group v-model=\"radio1\" class=\"ml-4\">\r\n                        <el-radio label=\"get\" size=\"large\"></el-radio>\r\n                        <el-radio label=\"post\" size=\"large\"></el-radio>\r\n                    </el-radio-group>\r\n                </el-row>\r\n                <el-row style=\"margin-top:20px;\">\r\n                    <el-button icon=\"el-icon-plus\" size=\"large\" style=\"margin-right:8px;\"\r\n                    @click=\"oprKV('add');\"></el-button>\r\n                        <el-col :span=\"3\" v-for=\"item in get_key_value\" :key=\"item.id\">\r\n                            <el-input style=\"width:50px;vertical-align:middle;\" placeholder=\"key\" v-model=\"item.key\" :ref=\"`input${item.id}`\" />\r\n                            <span style=\"font-size:20px;vertical-align:middle;margin:0px 5px 0px 5px\">:</span>\r\n                            <el-input style=\"width:50px;vertical-align:middle;\" placeholder=\"value\" v-model=\"item.value\"/>\r\n                        </el-col>\r\n                    <el-button icon=\"el-icon-minus\" size=\"large\" @click=\"oprKV('remove')\"></el-button>\r\n                </el-row>\r\n\r\n\r\n                <el-container style=\"margin-top:10px;\">\r\n                    <el-button type=\"info\" @click=\"send\">send</el-button>\r\n                </el-container>\r\n            </el-col>\r\n\r\n\r\n        </el-card>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {nanoid} from 'nanoid'\r\nexport default {\r\n    name:'Test',\r\n    data(){\r\n        return {\r\n            radio1:\"get\",\r\n            get_key_value:[{id:nanoid(),key:\"k1\",value:\"v1\"}],\r\n        }\r\n    },\r\n    methods:{\r\n        oprKV(type){\r\n            const len=this.get_key_value.length+1;\r\n            if(type==='add'){\r\n                this.get_key_value.push({id:nanoid(),key:`k${len}`,value:`v${len}`})\r\n            }else{\r\n                this.get_key_value.pop(-1);\r\n            }\r\n            // console.log( this.$refs[`input${this.get_key_value[0].id}`])\r\n            // Object.values(this.$refs)[1].focus()\r\n            this.$nextTick(()=>{\r\n                this.$refs[`input${this.get_key_value[len-1].id}`][0].focus()\r\n            })\r\n        },\r\n        async send(){\r\n            let getInfo=\"\"\r\n            this.get_key_value.forEach((value,index,array)=>{\r\n                getInfo+=`${value.key}=${value.value}&`\r\n            })\r\n            getInfo=getInfo.slice(0,getInfo.length-1)\r\n            console.log(getInfo)\r\n            await this.$ajax\r\n            .get(`/test/son?${getInfo}`)\r\n            .then(res=>{console.log(res.data)})\r\n            .catch(err=>{console.log(err)});\r\n        }\r\n    }\r\n    \r\n}\r\n</script>\r\n<style lang=\"css\">\r\n    \r\n</style>"],"mappings":";AAiCA,SAAAA,MAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,aAAA;QAAAC,EAAA,EAAAL,MAAA;QAAAM,GAAA;QAAAC,KAAA;MAAA;IACA;EACA;EACAC,OAAA;IACAC,MAAAC,IAAA;MACA,MAAAC,GAAA,QAAAP,aAAA,CAAAQ,MAAA;MACA,IAAAF,IAAA;QACA,KAAAN,aAAA,CAAAS,IAAA;UAAAR,EAAA,EAAAL,MAAA;UAAAM,GAAA,MAAAK,GAAA;UAAAJ,KAAA,MAAAI,GAAA;QAAA;MACA;QACA,KAAAP,aAAA,CAAAU,GAAA;MACA;MACA;MACA;MACA,KAAAC,SAAA;QACA,KAAAC,KAAA,cAAAZ,aAAA,CAAAO,GAAA,MAAAN,EAAA,OAAAY,KAAA;MACA;IACA;IACA,MAAAC,KAAA;MACA,IAAAC,OAAA;MACA,KAAAf,aAAA,CAAAgB,OAAA,EAAAb,KAAA,EAAAc,KAAA,EAAAC,KAAA;QACAH,OAAA,OAAAZ,KAAA,CAAAD,GAAA,IAAAC,KAAA,CAAAA,KAAA;MACA;MACAY,OAAA,GAAAA,OAAA,CAAAI,KAAA,IAAAJ,OAAA,CAAAP,MAAA;MACAY,OAAA,CAAAC,GAAA,CAAAN,OAAA;MACA,WAAAO,KAAA,CACAC,GAAA,cAAAR,OAAA,IACAS,IAAA,CAAAC,GAAA;QAAAL,OAAA,CAAAC,GAAA,CAAAI,GAAA,CAAA3B,IAAA;MAAA,GACA4B,KAAA,CAAAC,GAAA;QAAAP,OAAA,CAAAC,GAAA,CAAAM,GAAA;MAAA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}